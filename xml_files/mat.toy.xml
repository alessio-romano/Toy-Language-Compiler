<?xml version="1.0" encoding="UTF-8"?>
<ProgramOp>
  <VarDeclList>null</VarDeclList>
  <ProcOpList>
    <ProcOp>
      <id>main</id>
      <ParamDeclList>null</ParamDeclList>
      <ResultTypeList>
        <ResultTypeOp>void</ResultTypeOp>
      </ResultTypeList>
      <ProcBodyOp>
        <VarDeclList>
          <VarDeclOp>
            <TypeOp>int</TypeOp>
            <IdListInitOp>
              <IdList>
                <SimpleAssignOp>
                  <id>scelta</id>
                  <IntConst>1</IntConst>
                </SimpleAssignOp>
                <id>n</id>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
          <VarDeclOp>
            <TypeOp>float</TypeOp>
            <IdListInitOp>
              <IdList>
                <id>flt_result</id>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
          <VarDeclOp>
            <TypeOp>int</TypeOp>
            <IdListInitOp>
              <IdList>
                <id>int_result</id>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
        </VarDeclList>
        <StatList>
          <WhileOp>
            <StatList>
              <WriteOp>
                <ExprList>
                  <StringConst>1 - Somma di due numeri</StringConst>
                </ExprList>
              </WriteOp>
              <WriteOp>
                <ExprList>
                  <StringConst>2 - Moltiplicazione di due numeri utilizzando la somma</StringConst>
                </ExprList>
              </WriteOp>
              <WriteOp>
                <ExprList>
                  <StringConst>3 - Divisione intera fra due numeri positivi</StringConst>
                </ExprList>
              </WriteOp>
              <WriteOp>
                <ExprList>
                  <StringConst>4 - Elevamento a potenza</StringConst>
                </ExprList>
              </WriteOp>
              <WriteOp>
                <ExprList>
                  <StringConst>5 - Successione di Fibonacci</StringConst>
                </ExprList>
              </WriteOp>
              <WriteOp>
                <ExprList>
                  <StringConst>0 - Uscita</StringConst>
                </ExprList>
              </WriteOp>
              <WriteOp>
                <ExprList>
                  <StringConst />
                </ExprList>
              </WriteOp>
              <WriteOp>
                <ExprList>
                  <StringConst>Scelta:</StringConst>
                </ExprList>
              </WriteOp>
              <ReadOp>
                <IdList>
                  <id>scelta</id>
                </IdList>
              </ReadOp>
            </StatList>
            <NeOp>
              <id>scelta</id>
              <IntConst>0</IntConst>
            </NeOp>
            <DoOp>
              <StatList>
                <IfOp>
                  <EqOp>
                    <id>scelta</id>
                    <IntConst>1</IntConst>
                  </EqOp>
                  <StatList>
                    <MultipleAssignOp>
                      <IdList>
                        <id>flt_result</id>
                      </IdList>
                      <ExprList>
                        <CallProcOp>
                          <id>sum</id>
                          <ExprList>null</ExprList>
                        </CallProcOp>
                      </ExprList>
                    </MultipleAssignOp>
                    <WriteOp>
                      <ExprList>
                        <StringConst>La somma dei due numeri è:</StringConst>
                        <id>flt_result</id>
                        <StringConst />
                      </ExprList>
                    </WriteOp>
                  </StatList>
                  <ElifList>
                    <ElifOp>
                      <EqOp>
                        <id>scelta</id>
                        <IntConst>2</IntConst>
                      </EqOp>
                      <StatList>
                        <MultipleAssignOp>
                          <IdList>
                            <id>int_result</id>
                          </IdList>
                          <ExprList>
                            <CallProcOp>
                              <id>multiply</id>
                              <ExprList>null</ExprList>
                            </CallProcOp>
                          </ExprList>
                        </MultipleAssignOp>
                        <WriteOp>
                          <ExprList>
                            <StringConst>La moltiplicazione di due numeri usando la somma è:</StringConst>
                            <id>int_result</id>
                            <StringConst />
                          </ExprList>
                        </WriteOp>
                      </StatList>
                    </ElifOp>
                    <ElifOp>
                      <EqOp>
                        <id>scelta</id>
                        <IntConst>3</IntConst>
                      </EqOp>
                      <StatList>
                        <MultipleAssignOp>
                          <IdList>
                            <id>int_result</id>
                          </IdList>
                          <ExprList>
                            <CallProcOp>
                              <id>divide</id>
                              <ExprList>null</ExprList>
                            </CallProcOp>
                          </ExprList>
                        </MultipleAssignOp>
                        <WriteOp>
                          <ExprList>
                            <StringConst>La divisione intera fra i due numeri è:</StringConst>
                            <id>int_result</id>
                            <StringConst />
                          </ExprList>
                        </WriteOp>
                      </StatList>
                    </ElifOp>
                    <ElifOp>
                      <EqOp>
                        <id>scelta</id>
                        <IntConst>4</IntConst>
                      </EqOp>
                      <StatList>
                        <MultipleAssignOp>
                          <IdList>
                            <id>int_result</id>
                          </IdList>
                          <ExprList>
                            <CallProcOp>
                              <id>my_pow</id>
                              <ExprList>null</ExprList>
                            </CallProcOp>
                          </ExprList>
                        </MultipleAssignOp>
                        <WriteOp>
                          <ExprList>
                            <StringConst>L'elevamento a potenza è:</StringConst>
                            <id>int_result</id>
                            <StringConst />
                          </ExprList>
                        </WriteOp>
                      </StatList>
                    </ElifOp>
                  </ElifList>
                  <ElseOp>
                    <StatList>
                      <WriteOp>
                        <ExprList>
                          <StringConst>SUCCESSIONE di FIBONACCI</StringConst>
                        </ExprList>
                      </WriteOp>
                      <WriteOp>
                        <ExprList>
                          <StringConst>Fino a che punto della successione?</StringConst>
                        </ExprList>
                      </WriteOp>
                      <ReadOp>
                        <IdList>
                          <id>n</id>
                        </IdList>
                      </ReadOp>
                      <CallProcOp>
                        <id>fib</id>
                        <ExprList>
                          <id>n</id>
                        </ExprList>
                      </CallProcOp>
                      <WriteOp>
                        <ExprList>
                          <StringConst />
                        </ExprList>
                      </WriteOp>
                    </StatList>
                  </ElseOp>
                </IfOp>
              </StatList>
            </DoOp>
          </WhileOp>
        </StatList>
        <ReturnExprs>null</ReturnExprs>
      </ProcBodyOp>
    </ProcOp>
    <ProcOp>
      <id>sum</id>
      <ParamDeclList>null</ParamDeclList>
      <ResultTypeList>
        <ResultTypeOp>float</ResultTypeOp>
      </ResultTypeList>
      <ProcBodyOp>
        <VarDeclList>
          <VarDeclOp>
            <TypeOp>float</TypeOp>
            <IdListInitOp>
              <IdList>
                <id>a</id>
                <id>b</id>
                <id>result</id>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
        </VarDeclList>
        <StatList>
          <WriteOp>
            <ExprList>
              <StringConst>SOMMA</StringConst>
            </ExprList>
          </WriteOp>
          <WriteOp>
            <ExprList>
              <StringConst>Inserire il primo operando:</StringConst>
            </ExprList>
          </WriteOp>
          <ReadOp>
            <IdList>
              <id>a</id>
            </IdList>
          </ReadOp>
          <WriteOp>
            <ExprList>
              <StringConst>Inserire il secondo operando:</StringConst>
            </ExprList>
          </WriteOp>
          <ReadOp>
            <IdList>
              <id>b</id>
            </IdList>
          </ReadOp>
          <MultipleAssignOp>
            <IdList>
              <id>result</id>
            </IdList>
            <ExprList>
              <PlusOp>
                <id>a</id>
                <id>b</id>
              </PlusOp>
            </ExprList>
          </MultipleAssignOp>
        </StatList>
        <ReturnExprs>
          <ExprList>
            <id>result</id>
          </ExprList>
        </ReturnExprs>
      </ProcBodyOp>
    </ProcOp>
    <ProcOp>
      <id>multiply</id>
      <ParamDeclList>null</ParamDeclList>
      <ResultTypeList>
        <ResultTypeOp>int</ResultTypeOp>
      </ResultTypeList>
      <ProcBodyOp>
        <VarDeclList>
          <VarDeclOp>
            <TypeOp>int</TypeOp>
            <IdListInitOp>
              <IdList>
                <id>a</id>
                <id>b</id>
                <SimpleAssignOp>
                  <id>result</id>
                  <IntConst>0</IntConst>
                </SimpleAssignOp>
                <SimpleAssignOp>
                  <id>i</id>
                  <IntConst>0</IntConst>
                </SimpleAssignOp>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
        </VarDeclList>
        <StatList>
          <WriteOp>
            <ExprList>
              <StringConst>MOLTIPLICAZIONE tramite SOMMA</StringConst>
            </ExprList>
          </WriteOp>
          <WriteOp>
            <ExprList>
              <StringConst>Inserire il primo operando:</StringConst>
            </ExprList>
          </WriteOp>
          <ReadOp>
            <IdList>
              <id>a</id>
            </IdList>
          </ReadOp>
          <WriteOp>
            <ExprList>
              <StringConst>Inserire il secondo operando:</StringConst>
            </ExprList>
          </WriteOp>
          <ReadOp>
            <IdList>
              <id>b</id>
            </IdList>
          </ReadOp>
          <WhileOp>
            <StatList>null</StatList>
            <LtOp>
              <id>i</id>
              <id>b</id>
            </LtOp>
            <DoOp>
              <StatList>
                <MultipleAssignOp>
                  <IdList>
                    <id>result</id>
                  </IdList>
                  <ExprList>
                    <PlusOp>
                      <id>result</id>
                      <id>a</id>
                    </PlusOp>
                  </ExprList>
                </MultipleAssignOp>
                <MultipleAssignOp>
                  <IdList>
                    <id>i</id>
                  </IdList>
                  <ExprList>
                    <PlusOp>
                      <id>i</id>
                      <IntConst>1</IntConst>
                    </PlusOp>
                  </ExprList>
                </MultipleAssignOp>
              </StatList>
            </DoOp>
          </WhileOp>
        </StatList>
        <ReturnExprs>
          <ExprList>
            <id>result</id>
          </ExprList>
        </ReturnExprs>
      </ProcBodyOp>
    </ProcOp>
    <ProcOp>
      <id>divide</id>
      <ParamDeclList>null</ParamDeclList>
      <ResultTypeList>
        <ResultTypeOp>int</ResultTypeOp>
      </ResultTypeList>
      <ProcBodyOp>
        <VarDeclList>
          <VarDeclOp>
            <TypeOp>int</TypeOp>
            <IdListInitOp>
              <IdList>
                <id>a</id>
                <id>b</id>
                <SimpleAssignOp>
                  <id>result</id>
                  <IntConst>0</IntConst>
                </SimpleAssignOp>
                <SimpleAssignOp>
                  <id>i</id>
                  <IntConst>0</IntConst>
                </SimpleAssignOp>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
        </VarDeclList>
        <StatList>
          <WriteOp>
            <ExprList>
              <StringConst>DIVISIONE tra INTERI POSITIVI</StringConst>
            </ExprList>
          </WriteOp>
          <WhileOp>
            <StatList>
              <WriteOp>
                <ExprList>
                  <StringConst>Inserire il primo operando:</StringConst>
                </ExprList>
              </WriteOp>
              <ReadOp>
                <IdList>
                  <id>a</id>
                </IdList>
              </ReadOp>
            </StatList>
            <LtOp>
              <id>a</id>
              <IntConst>0</IntConst>
            </LtOp>
            <DoOp>
              <StatList>
                <WriteOp>
                  <ExprList>
                    <StringConst>Il valore inserito è negativo. Riprovare</StringConst>
                  </ExprList>
                </WriteOp>
              </StatList>
            </DoOp>
          </WhileOp>
          <WhileOp>
            <StatList>
              <WriteOp>
                <ExprList>
                  <StringConst>Inserire il secondo operando:</StringConst>
                </ExprList>
              </WriteOp>
              <ReadOp>
                <IdList>
                  <id>b</id>
                </IdList>
              </ReadOp>
            </StatList>
            <LtOp>
              <id>b</id>
              <IntConst>0</IntConst>
            </LtOp>
            <DoOp>
              <StatList>
                <WriteOp>
                  <ExprList>
                    <StringConst>Il valore inserito è negativo. Riprovare</StringConst>
                  </ExprList>
                </WriteOp>
              </StatList>
            </DoOp>
          </WhileOp>
          <MultipleAssignOp>
            <IdList>
              <id>result</id>
            </IdList>
            <ExprList>
              <DivOp>
                <id>a</id>
                <id>b</id>
              </DivOp>
            </ExprList>
          </MultipleAssignOp>
        </StatList>
        <ReturnExprs>
          <ExprList>
            <id>result</id>
          </ExprList>
        </ReturnExprs>
      </ProcBodyOp>
    </ProcOp>
    <ProcOp>
      <id>my_pow</id>
      <ParamDeclList>null</ParamDeclList>
      <ResultTypeList>
        <ResultTypeOp>int</ResultTypeOp>
      </ResultTypeList>
      <ProcBodyOp>
        <VarDeclList>
          <VarDeclOp>
            <TypeOp>int</TypeOp>
            <IdListInitOp>
              <IdList>
                <id>a</id>
                <id>b</id>
                <SimpleAssignOp>
                  <id>result</id>
                  <IntConst>1</IntConst>
                </SimpleAssignOp>
                <SimpleAssignOp>
                  <id>i</id>
                  <IntConst>0</IntConst>
                </SimpleAssignOp>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
        </VarDeclList>
        <StatList>
          <WriteOp>
            <ExprList>
              <StringConst>ELEVAMENTO a POTENZA</StringConst>
            </ExprList>
          </WriteOp>
          <WriteOp>
            <ExprList>
              <StringConst>Inserire la base:</StringConst>
            </ExprList>
          </WriteOp>
          <ReadOp>
            <IdList>
              <id>a</id>
            </IdList>
          </ReadOp>
          <WriteOp>
            <ExprList>
              <StringConst>Inserire l'esponente:</StringConst>
            </ExprList>
          </WriteOp>
          <ReadOp>
            <IdList>
              <id>b</id>
            </IdList>
          </ReadOp>
          <WhileOp>
            <StatList>null</StatList>
            <LtOp>
              <id>i</id>
              <id>b</id>
            </LtOp>
            <DoOp>
              <StatList>
                <MultipleAssignOp>
                  <IdList>
                    <id>result</id>
                  </IdList>
                  <ExprList>
                    <MultOp>
                      <id>result</id>
                      <id>a</id>
                    </MultOp>
                  </ExprList>
                </MultipleAssignOp>
                <MultipleAssignOp>
                  <IdList>
                    <id>i</id>
                  </IdList>
                  <ExprList>
                    <PlusOp>
                      <id>i</id>
                      <IntConst>1</IntConst>
                    </PlusOp>
                  </ExprList>
                </MultipleAssignOp>
              </StatList>
            </DoOp>
          </WhileOp>
        </StatList>
        <ReturnExprs>
          <ExprList>
            <id>result</id>
          </ExprList>
        </ReturnExprs>
      </ProcBodyOp>
    </ProcOp>
    <ProcOp>
      <id>fib</id>
      <ParamDeclList>
        <ParamDeclOp>
          <TypeOp>int</TypeOp>
          <IdList>
            <id>n</id>
          </IdList>
        </ParamDeclOp>
      </ParamDeclList>
      <ResultTypeList>
        <ResultTypeOp>void</ResultTypeOp>
      </ResultTypeList>
      <ProcBodyOp>
        <VarDeclList>
          <VarDeclOp>
            <TypeOp>int</TypeOp>
            <IdListInitOp>
              <IdList>
                <SimpleAssignOp>
                  <id>first</id>
                  <IntConst>0</IntConst>
                </SimpleAssignOp>
                <SimpleAssignOp>
                  <id>second</id>
                  <IntConst>1</IntConst>
                </SimpleAssignOp>
                <id>next</id>
                <SimpleAssignOp>
                  <id>c</id>
                  <IntConst>0</IntConst>
                </SimpleAssignOp>
              </IdList>
            </IdListInitOp>
          </VarDeclOp>
        </VarDeclList>
        <StatList>
          <WhileOp>
            <StatList>null</StatList>
            <LtOp>
              <id>c</id>
              <id>n</id>
            </LtOp>
            <DoOp>
              <StatList>
                <IfOp>
                  <LeOp>
                    <id>c</id>
                    <IntConst>1</IntConst>
                  </LeOp>
                  <StatList>
                    <MultipleAssignOp>
                      <IdList>
                        <id>next</id>
                      </IdList>
                      <ExprList>
                        <id>c</id>
                      </ExprList>
                    </MultipleAssignOp>
                  </StatList>
                  <ElifList>null</ElifList>
                  <ElseOp>
                    <StatList>
                      <MultipleAssignOp>
                        <IdList>
                          <id>next</id>
                        </IdList>
                        <ExprList>
                          <PlusOp>
                            <id>first</id>
                            <id>second</id>
                          </PlusOp>
                        </ExprList>
                      </MultipleAssignOp>
                      <MultipleAssignOp>
                        <IdList>
                          <id>first</id>
                        </IdList>
                        <ExprList>
                          <id>second</id>
                        </ExprList>
                      </MultipleAssignOp>
                      <MultipleAssignOp>
                        <IdList>
                          <id>second</id>
                        </IdList>
                        <ExprList>
                          <id>next</id>
                        </ExprList>
                      </MultipleAssignOp>
                    </StatList>
                  </ElseOp>
                </IfOp>
                <WriteOp>
                  <ExprList>
                    <id>next</id>
                    <StringConst />
                  </ExprList>
                </WriteOp>
                <MultipleAssignOp>
                  <IdList>
                    <id>c</id>
                  </IdList>
                  <ExprList>
                    <PlusOp>
                      <id>c</id>
                      <IntConst>1</IntConst>
                    </PlusOp>
                  </ExprList>
                </MultipleAssignOp>
              </StatList>
            </DoOp>
          </WhileOp>
        </StatList>
        <ReturnExprs>null</ReturnExprs>
      </ProcBodyOp>
    </ProcOp>
  </ProcOpList>
</ProgramOp>
